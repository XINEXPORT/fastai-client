{
  "version": 3,
  "sources": ["../../@toolpad/core/esm/useNotifications/useNotifications.js", "../../@toolpad/core/esm/useNotifications/NotificationsContext.js", "../../@toolpad/core/esm/useNotifications/NotificationsProvider.js", "../../@mui/icons-material/esm/Close.js", "../../@toolpad/utils/esm/react.js", "../../@toolpad/core/node_modules/@mui/utils/esm/useForkRef/useForkRef.js", "../../@toolpad/core/node_modules/@mui/utils/esm/setRef/setRef.js", "../../@toolpad/core/node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js", "../../@toolpad/core/node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js", "../../@toolpad/core/node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js", "../../@toolpad/core/node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js", "../../@toolpad/core/node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js", "../../@toolpad/core/node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js", "../../@toolpad/core/node_modules/@mui/utils/esm/useSlotProps/useSlotProps.js", "../../@toolpad/core/esm/AppProvider/LocalizationProvider.js", "../../@toolpad/core/esm/locales/getLocalization.js", "../../@toolpad/core/esm/locales/en.js"],
  "sourcesContent": ["import * as React from 'react';\nimport { NotificationsContext } from \"./NotificationsContext.js\";\nconst serverNotifications = {\n  show: () => {\n    throw new Error('Not supported on server side');\n  },\n  close: () => {\n    throw new Error('Not supported on server side');\n  }\n};\nexport function useNotifications() {\n  const context = React.useContext(NotificationsContext);\n  if (context) {\n    return context;\n  }\n  return serverNotifications;\n}", "'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\n\nexport const NotificationsContext = /*#__PURE__*/React.createContext(null);", "'use client';\n\nvar _CloseIcon;\nimport * as React from 'react';\nimport { Alert, Badge, Button, IconButton, Snackbar, SnackbarContent } from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useNonNullableContext } from '@toolpad/utils/react';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport { NotificationsContext } from \"./NotificationsContext.js\";\nimport { useLocaleText } from \"../AppProvider/LocalizationProvider.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RootPropsContext = /*#__PURE__*/React.createContext(null);\nconst defaultLocaleText = {\n  close: 'Close'\n};\nfunction Notification({\n  notificationKey,\n  open,\n  message,\n  options,\n  badge\n}) {\n  const globalLocaleText = useLocaleText();\n  const localeText = {\n    ...defaultLocaleText,\n    ...globalLocaleText\n  };\n  const {\n    close\n  } = useNonNullableContext(NotificationsContext);\n  const {\n    severity,\n    actionText,\n    onAction,\n    autoHideDuration\n  } = options;\n  const handleClose = React.useCallback((event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    close(notificationKey);\n  }, [notificationKey, close]);\n  const action = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [onAction ? /*#__PURE__*/_jsx(Button, {\n      color: \"inherit\",\n      size: \"small\",\n      onClick: onAction,\n      children: actionText ?? 'Action'\n    }) : null, /*#__PURE__*/_jsx(IconButton, {\n      size: \"small\",\n      \"aria-label\": localeText?.close,\n      title: localeText?.close,\n      color: \"inherit\",\n      onClick: handleClose,\n      children: _CloseIcon || (_CloseIcon = /*#__PURE__*/_jsx(CloseIcon, {\n        fontSize: \"small\"\n      }))\n    })]\n  });\n  const props = React.useContext(RootPropsContext);\n  const SnackbarComponent = props?.slots?.snackbar ?? Snackbar;\n  const snackbarSlotProps = useSlotProps({\n    elementType: SnackbarComponent,\n    ownerState: props,\n    externalSlotProps: props?.slotProps?.snackbar,\n    additionalProps: {\n      open,\n      autoHideDuration,\n      onClose: handleClose,\n      action\n    }\n  });\n  return /*#__PURE__*/_jsx(SnackbarComponent, {\n    ...snackbarSlotProps,\n    children: /*#__PURE__*/_jsx(Badge, {\n      badgeContent: badge,\n      color: \"primary\",\n      sx: {\n        width: '100%'\n      },\n      children: severity ? /*#__PURE__*/_jsx(Alert, {\n        severity: severity,\n        sx: {\n          width: '100%'\n        },\n        action: action,\n        children: message\n      }) : /*#__PURE__*/_jsx(SnackbarContent, {\n        message: message,\n        action: action\n      })\n    })\n  }, notificationKey);\n}\nfunction Notifications({\n  state\n}) {\n  const currentNotification = state.queue[0] ?? null;\n  return currentNotification ? /*#__PURE__*/_jsx(Notification, {\n    ...currentNotification,\n    badge: state.queue.length > 1 ? String(state.queue.length) : null\n  }) : null;\n}\nlet nextId = 0;\nconst generateId = () => {\n  const id = nextId;\n  nextId += 1;\n  return id;\n};\n\n/**\n * Provider for Notifications. The subtree of this component can use the `useNotifications` hook to\n * access the notifications API. The notifications are shown in the same order they are requested.\n *\n * Demos:\n *\n * - [Sign-in Page](https://mui.com/toolpad/core/react-sign-in-page/)\n * - [useNotifications](https://mui.com/toolpad/core/react-use-notifications/)\n *\n * API:\n *\n * - [NotificationsProvider API](https://mui.com/toolpad/core/api/notifications-provider)\n */\nfunction NotificationsProvider(props) {\n  const {\n    children\n  } = props;\n  const [state, setState] = React.useState({\n    queue: []\n  });\n  const show = React.useCallback((message, options = {}) => {\n    const notificationKey = options.key ?? `::toolpad-internal::notification::${generateId()}`;\n    setState(prev => {\n      if (prev.queue.some(n => n.notificationKey === notificationKey)) {\n        // deduplicate by key\n        return prev;\n      }\n      return {\n        ...prev,\n        queue: [...prev.queue, {\n          message,\n          options,\n          notificationKey,\n          open: true\n        }]\n      };\n    });\n    return notificationKey;\n  }, []);\n  const close = React.useCallback(key => {\n    setState(prev => ({\n      ...prev,\n      queue: prev.queue.filter(n => n.notificationKey !== key)\n    }));\n  }, []);\n  const contextValue = React.useMemo(() => ({\n    show,\n    close\n  }), [show, close]);\n  return /*#__PURE__*/_jsx(RootPropsContext.Provider, {\n    value: props,\n    children: /*#__PURE__*/_jsxs(NotificationsContext.Provider, {\n      value: contextValue,\n      children: [children, /*#__PURE__*/_jsx(Notifications, {\n        state: state\n      })]\n    })\n  });\n}\nexport { NotificationsProvider };", "\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');", "import * as React from 'react';\nimport * as ReactIs from 'react-is';\n\n/**\n * Like `Array.prototype.join`, but for React nodes.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function interleave(items, separator) {\n  const result = [];\n  for (let i = 0; i < items.length; i += 1) {\n    if (i > 0) {\n      if (ReactIs.isElement(separator)) {\n        result.push(/*#__PURE__*/React.cloneElement(separator, {\n          key: `separator-${i}`\n        }));\n      } else {\n        result.push(separator);\n      }\n    }\n    const item = items[i];\n    result.push(item);\n  }\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: result\n  });\n}\n\n/**\n * Consume a context but throw when used outside of a provider.\n */\nexport function useNonNullableContext(context, name) {\n  const maybeContext = React.useContext(context);\n  if (maybeContext === null || maybeContext === undefined) {\n    throw new Error(`context \"${name}\" was used without a Provider`);\n  }\n  return maybeContext;\n}\n\n/**\n * Context that throws when used outside of a provider.\n */\nexport function createProvidedContext(name) {\n  const context = /*#__PURE__*/React.createContext(undefined);\n  const useContext = () => useNonNullableContext(context, name);\n  return [useContext, context.Provider];\n}\nexport function useAssertedContext(context) {\n  const value = React.useContext(context);\n  if (value === undefined) {\n    throw new Error('context was used without a Provider');\n  }\n  return value;\n}\n\n/**\n * Debugging tool that logs updates to props.\n */\nexport function useTraceUpdates(prefix, props) {\n  const prev = React.useRef(props);\n  React.useEffect(() => {\n    const changedProps = {};\n    for (const key of Object.keys(props)) {\n      if (!Object.is(prev.current[key], props[key])) {\n        changedProps[key] = props[key];\n      }\n    }\n    if (Object.keys(changedProps).length > 0) {\n      // eslint-disable-next-line no-console\n      console.log(`${prefix} changed props:`, changedProps);\n    }\n    prev.current = props;\n  });\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport default function getComponentDisplayName(Component) {\n  if (typeof Component === 'string') {\n    return Component || 'Unknown';\n  }\n  return Component.displayName || Component.name;\n}\n\n/**\n * Create a shared state to be used across the application. Returns a useState hook that\n * is synchronized on the same state between all instances where it is called.\n */\nexport function createGlobalState(initialState) {\n  let state = initialState;\n  const listeners = [];\n  const subscribe = cb => {\n    listeners.push(cb);\n    return () => {\n      const index = listeners.indexOf(cb);\n      listeners.splice(index, 1);\n    };\n  };\n  const getState = () => state;\n  const setState = newState => {\n    state = typeof newState === 'function' ? newState(state) : newState;\n    listeners.forEach(cb => cb(state));\n  };\n  const useValue = () => React.useSyncExternalStore(subscribe, getState, getState);\n  const useState = () => {\n    const value = useValue();\n    return [value, setState];\n  };\n  return {\n    getState,\n    setState,\n    useValue,\n    useState,\n    subscribe\n  };\n}", "'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\n\n/**\n * Takes an array of refs and returns a new ref which will apply any modification to all of the refs.\n * This is useful when you want to have the ref used in multiple places.\n *\n * ```tsx\n * const rootRef = React.useRef<Instance>(null);\n * const refFork = useForkRef(rootRef, props.ref);\n *\n * return (\n *   <Root {...props} ref={refFork} />\n * );\n * ```\n *\n * @param {Array<React.Ref<Instance> | undefined>} refs The ref array.\n * @returns {React.RefCallback<Instance> | null} The new ref callback.\n */\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}", "/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}", "/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;", "import isHostComponent from \"../isHostComponent/index.js\";\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}\nexport default appendOwnerState;", "/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;", "/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;", "import clsx from 'clsx';\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;", "/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;", "'use client';\n\nimport useForkRef from \"../useForkRef/index.js\";\nimport appendOwnerState from \"../appendOwnerState/index.js\";\nimport mergeSlotProps from \"../mergeSlotProps/index.js\";\nimport resolveComponentProps from \"../resolveComponentProps/index.js\";\n/**\n * @ignore - do not document.\n * Builds the props to be passed into the slot of an unstyled component.\n * It merges the internal props of the component with the ones supplied by the user, allowing to customize the behavior.\n * If the slot component is not a host component, it also merges in the `ownerState`.\n *\n * @param parameters.getSlotProps - A function that returns the props to be passed to the slot component.\n */\nfunction useSlotProps(parameters) {\n  const {\n    elementType,\n    externalSlotProps,\n    ownerState,\n    skipResolvingSlotProps = false,\n    ...other\n  } = parameters;\n  const resolvedComponentsProps = skipResolvingSlotProps ? {} : resolveComponentProps(externalSlotProps, ownerState);\n  const {\n    props: mergedProps,\n    internalRef\n  } = mergeSlotProps({\n    ...other,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.additionalProps?.ref);\n  const props = appendOwnerState(elementType, {\n    ...mergedProps,\n    ref\n  }, ownerState);\n  return props;\n}\nexport default useSlotProps;", "'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport DEFAULT_LOCALE from \"../locales/en.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const LocalizationContext = /*#__PURE__*/React.createContext({});\nconst LocalizationProvider = function LocalizationProvider(props) {\n  const {\n    localeText: propsLocaleText,\n    children\n  } = props;\n  const theme = useTheme();\n  // @ts-ignore\n  const themeLocaleText = theme?.components?.MuiLocalizationProvider?.defaultProps?.localeText;\n  const defaultLocaleText = DEFAULT_LOCALE.components.MuiLocalizationProvider.defaultProps.localeText;\n\n  /* The order of overrides is:\n   * 1. The `localeText` prop of the `AppProvider` supersedes\n   * 2. The localeText provided as an argument to the `createTheme` function, which supersedes\n   * 3. The default locale text\n   */\n\n  const localeText = React.useMemo(() => ({\n    ...defaultLocaleText,\n    ...themeLocaleText,\n    ...propsLocaleText\n  }), [defaultLocaleText, themeLocaleText, propsLocaleText]);\n  return /*#__PURE__*/_jsx(LocalizationContext.Provider, {\n    value: localeText,\n    children: children\n  });\n};\nprocess.env.NODE_ENV !== \"production\" ? LocalizationProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Locale for components texts\n   */\n  localeText: PropTypes.object\n} : void 0;\nexport { LocalizationProvider };\n/**\n *\n * Demos:\n *\n * - [Sign-in Page](https://mui.com/toolpad/core/react-sign-in-page/)\n *\n * API:\n *\n * - [LocalizationProvider API](https://mui.com/toolpad/core/api/localization-provider)\n */\nexport function useLocaleText() {\n  return React.useContext(LocalizationContext);\n}", "export const getLocalization = translations => {\n  return {\n    components: {\n      MuiLocalizationProvider: {\n        defaultProps: {\n          localeText: {\n            ...translations\n          }\n        }\n      }\n    }\n  };\n};", "import { getLocalization } from \"./getLocalization.js\";\nconst en = {\n  // Account\n  accountSignInLabel: 'Sign In',\n  accountSignOutLabel: 'Sign Out',\n  // AccountPreview\n  accountPreviewTitle: 'Account',\n  accountPreviewIconButtonLabel: 'Current User',\n  // SignInPage\n  signInTitle: 'Sign In',\n  signInSubtitle: 'Welcome user, please sign in to continue',\n  signInRememberMe: 'Remember Me',\n  oauthSignInTitle: 'Sign in with OAuth',\n  passkeySignInTitle: 'Sign in with Passkey',\n  magicLinkSignInTitle: 'Sign in with Magic Link',\n  // Common authentication labels\n  email: 'Email',\n  password: 'Password',\n  username: 'Username',\n  passkey: 'Passkey',\n  // Common action labels\n  save: 'Save',\n  cancel: 'Cancel',\n  ok: 'Ok',\n  or: 'Or',\n  to: 'To',\n  with: 'With',\n  close: 'Close',\n  delete: 'Delete',\n  alert: 'Alert',\n  confirm: 'Confirm',\n  loading: 'Loading...'\n};\nexport default getLocalization(en);"],
  "mappings": "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",
  "names": ["React", "React", "_jsx", "React", "import_jsx_runtime", "React", "joinedClasses", "mergedStyle", "props", "React", "import_jsx_runtime", "LocalizationProvider", "defaultLocaleText", "_jsx", "PropTypes", "import_jsx_runtime", "_jsxs", "_jsx"]
}
